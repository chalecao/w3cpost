<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>多端兼容性 on</title><link>/fed-regain/browser/compatible/</link><description>Recent content in 多端兼容性 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="/fed-regain/browser/compatible/index.xml" rel="self" type="application/rss+xml"/><item><title>H5兼容性问题总结</title><link>/fed-regain/browser/compatible/h5%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/fed-regain/browser/compatible/h5%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>文字问题 # 1.文字顶部被截掉，这个很坑，常见于android手机
机型：android手机，红米note4x, 小米6
原因： 文字大小和行高一样的时候，会出现这个问题
字体的font-size不等于最终显示的大小，取决于字体设计师的定义，以Catamaran字体为例，当我们设置100px的字号时，大写字母的高度（Capital Height）是68px，小写字母的高度（X-Hegiht）是49px，整体的高度是164px（Ascender 1100 + Descender 540），要了解任意字体的相关属性可以使用fontforge 我们日常使用的CSS单位em对应font-size本身，ex对应小写字母的高度（中文字体对应的也是该字体下英文小写字母的高度） 正因为第一点，为了不截掉文字，**最小行高的设置需要依据字体来**，以Arial为例，设置line-height: 1时就会造成文字被截掉的问题： font-size: 16px; line-height: 16px; 解决方法： 文字大小设小一点，或者增加行高，或者不设置行高或者设置行高为normal。
全局不设置行高（即保持line-height: normal），各个字体有自己特有的安全行高，iOS和Android下自带字体的安全行高是1.03～1.18。
注1：行高的计算 (100/em size) x (HHead Ascent + HHead Descent + HHead Line Gap) / 100 注2：这里的安全行高即font-family: normal所对应的行高，行高的设置需要依据字体来，95%以上的字体安全行高大于1，有些字体的安全行高甚至达到了3.378。不写死全局的行高是最保险的，写font属性时可以写normal关键字，例如：font: 12/normal …
字体设置 移动端H5字体设置，全局可以按如下方式：
font-family: system-ui, -apple-system, BlinkMacSystemFont, Helvetica Neue, Helvetica, sans-serif 这种方式下，不用设置lang，中英文都可以fallback到最好的字体。
位置问题 # 如果有这种fixed bar , 不要设置高度，尽量使用内部内容填充高度，或者通过padding的形式，如果直接设置高度，在下拉滚动切换position：fixed的时候，容易出现高度下移1px左右的距离，也就是fied bar下面会多出来一道线，这个问题在android容易复现。 参考文献 # 关于lang标签：https://www.growingwiththeweb.com/2014/03/languages-and-chinese-characters-on-the-web.html 深入了解CSS字体度量，行高和vertical-align：https://www.w3cplus.com/css/css-font-metrics-line-height-and-vertical-align.html the-lang-and-xml: https://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes 怎样区分衬线字体与无衬线字体？: https://www.zhengjie.com/question/350E5834 字体设计： https://fontforge.</description></item><item><title>ios低版本中JavaScript的兼容性问题</title><link>/fed-regain/browser/compatible/ios%E4%BD%8E%E7%89%88%E6%9C%AC%E4%B8%ADjavascript%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/fed-regain/browser/compatible/ios%E4%BD%8E%E7%89%88%E6%9C%AC%E4%B8%ADjavascript%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/</guid><description>forEach遇到NodeList # 注意在ios9中，如果使用document.querySelectorAll，那么返回的是一个NodeList，这个是不可以用foreach语句的，会报错，导致后面脚本阻断。ios10及其以上可以的
分析原因： 使用babel并不会对forEach进行转义，页面引入的babel-polyfill只是在Array的原型上补充了forEach方法，所以在用到像这种获取元素节点列表的时候存在兼容性问题。
position:sticky # ios9系列版本下，查了caniuse.com 应该是支持-webkit-sticky的，但是显示有bug，位置错乱，特别是当你把position切换成fixed时候，会出现位置错乱。解决方法是默认用position：relative，然后切换成fixed 在ios9下是没有问题的。
append # ios9.x版本append方法会报错，需要换成appendChild</description></item><item><title>iphone6和6s中webview的bug</title><link>/fed-regain/browser/compatible/iphone6%E5%92%8C6s%E4%B8%ADwebview%E7%9A%84bug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/fed-regain/browser/compatible/iphone6%E5%92%8C6s%E4%B8%ADwebview%E7%9A%84bug/</guid><description>技术鸡汤 # 好久没有更新博客了，还是来说说最近做的事情吧。先从一个bug说起，由于在app中无论是ios还是android，展示和控制富文本都不是一件容易的事情，所以由于业务需求，我们会采用嵌套webview的形式来完成相应的功能。webview适配的方案有很多，但是其中也隐藏了许多的bug。
常用的适配方案（rem方案）：
1.基于media query设置html和body的基准。（缺点比较繁琐，不好适配所有机型）
2.基于JS动态设置html和body的基准，动态设置viewport，基于设备像素比设置高清方案。
3.阿里的flexible方案 https://github.com/amfe/article/issues/17
动态设置viewport # 关于viewport 这里 有介绍。动态设置viewport是一种投机的方法，这种方法是有缺陷的，
比如iphone6 和 iphone6s中，动态设置viewport会导致webview的宽度还是设置之前的宽度，虽然试图更新了，但是webview的宽度比计算后的viewport的宽度要大一些。导致如果绑定了webview的左右滑动事件，webview水平方向由于保留了之前的宽度，会有滚动条，虽然并没有展示滚动条，但是会响应左右滚动的事件，导致页面左右滚动的事件先被webview捕获了，导致左右滑动不流畅，出现bug。所以，动态改变viewport是不妥的。
这里还是奉上flexible方案：https://github.com/amfe/article/issues/17
奉上两个有用的脚本：
px2rem.js
_px2rem.scss
谢谢！ # 转载请注明出处：//fed123.oss-ap-southeast-2.aliyuncs.com/2016/09/07/2016_ios_webview/
欢迎关注皓眸学问公众号（扫描左侧二维码），每天好文、新技术！任何学习疑问或者工作问题都可以给我留言、互动。T_T 皓眸大前端开发学习 T_T</description></item><item><title>基于rem方案实现自适应布局</title><link>/fed-regain/browser/compatible/%E5%9F%BA%E4%BA%8Erem%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/fed-regain/browser/compatible/%E5%9F%BA%E4%BA%8Erem%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80/</guid><description>rem是相对于根元素，这样就意味着，我们只需要在根元素确定一个px字号，则可以来算出元素的宽高。本文讲的是如何使用rem实现自适应。rem这是个低调的css单位，近一两年开始崭露头角，有许多同学对rem的评价不一，有的在尝试使用，有的在使用过程中遇到坑就弃用了。但是我对rem综合评价是用来做web app它绝对是最合适的人选之一。
rem是什么？ # rem（font size of the root element）是指相对于根元素的字体大小的单位。简单的说它就是一个相对单位。看到rem大家一定会想起em单位，em（font size of the element）是指相对于父元素的字体大小的单位。它们之间其实很相似，只不过一个计算的规则是依赖根元素一个是依赖父元素计算。·
为什么web app要使用rem？ # 这里我特别强调web app，web page就不能使用rem吗，其实也当然可以，不过出于兼容性的考虑在web app下使用更加能突显这个单位的价值和能力，接下来我们来看看目前一些企业的web app是怎么做屏幕适配的。
1、实现强大的屏幕适配布局： # 最近iphone6一下出了两款尺寸的手机，导致的移动端的屏幕种类更加的混乱，记得一两年前做web app有一种做法是以320宽度为标准去做适配，超过320的大小还是以320的规格去展示，这种实现方式以淘宝web app为代表作，但是近期手机淘宝首页进行了改版，采用了rem这个单位，首页以内依旧是和以前一样各种混乱，有定死宽度的页面，也有那种流式布局的页面。
我们现在在切页面布局的使用常用的单位是px，这是一个绝对单位，web app的屏幕适配有很多中做法，例如：流式布局、限死宽度，还有就是通过响应式来做，但是这些方案都不是最佳的解决方法。
例如流式布局的解决方案有不少弊端，它虽然可以让各种屏幕都适配，但是显示的效果极其的不好，因为只有几个尺寸的手机能够完美的显示出视觉设计师和交互最想要的效果，但是目前行业里用流式布局切web app的公司还是挺多的，看看下面我收集的一些案例：
1.携程：
2.兰亭
上面的网站都是采用的流式布局的技术实现的，他们在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用px来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的，其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。
流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。
2.固定宽度做法 # 还有一种是固定页面宽度的做法，早期有些网站把页面设置成320的宽度，超出部分留白，这样做视觉，前端都挺开心，视觉在也不用被流式布局限制自己的设计灵感了，前端也不用在搞坑爹的流式布局。但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小，手机淘宝首页起初是这么做的，但近期改版了，采用了rem。
3.响应式做法 # 响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从web page到web app直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个web app的版本。
4.设置viewport进行缩放 # 天猫的web app的首页就是采用这种方式去做的，以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得他和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=320,maximum-scale=1.3,user-scalable=no&amp;quot;&amp;gt; rem能等比例适配所有屏幕 # 上面讲了一大堆目前大部分公司主流的一些web app的适配解决方案，接下来讲下rem是如何工作的。
上面说过rem是通过根元素进行适配的，网页中的根元素指的是html我们通过设置html的字体大小就可以控制rem的大小。举个例子：
html{ font-size:20px; } .btn { width: 6rem; height: 3rem; line-height: 3rem; font-size: 1.</description></item><item><title>手机网页开发问题集锦</title><link>/fed-regain/browser/compatible/%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/fed-regain/browser/compatible/%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6/</guid><description>前言 # 接到一个小活，开发手机网页。对方给了一个psd设计图，让我做个手机网页，设计图很长，要求上拉动态加载。我想了想，本以为自己切个图处理一下就好，后来发现不行，许多问题。这里特地记录一下，有些还没解决，只是给了一下自己的想法。
转载请注明出处：//fed123.oss-ap-southeast-2.aliyuncs.com/2014/08/23/2014_web_question/
Doctype声明 # 有时可能您并没有注意，在编写html页面时候，有个关于&lt;!DOCTYPE> 声明。HTML 也有多个不同的版本，只有完全明白页面中使用的确切 HTML 版本，浏览器才能完全正确地显示出 HTML 页面。这就是 &lt;!DOCTYPE> 的用处。
&lt;!DOCTYPE> 不是 HTML 标签。它为[浏览器](https://www.w3cdoc.com)提供一项信息（声明），即 HTML 是用什么版本编写的。 在HTML5中，简化了这一块，比html4简化了很多。不同格式的html声明如下：
HTML5：
HTML 4.01 Strict:
该 DTD 包含所有 HTML 元素和属性，但不包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。
HTML 4.01 Transitional
该 DTD 包含所有 HTML 元素和属性，包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。
HTML 4.01 Frameset
该 DTD 等同于 HTML 4.01 Transitional，但允许框架集内容。
XHTML 1.0 Transitional
该 DTD 包含所有 HTML 元素和属性，包括展示性的和弃用的元素（比如 font）。不允许框架集（Framesets）。必须以格式正确的 XML 来编写标记。
详情可以参考： https://www.w3school.com.cn/tags/tag_doctype.asp
这里主要说一个问题：添加这个声明_&lt;!DOCTYPE html>_以后，浏览器会自动给一些元素添加默认样式。比如table会默认添加如下样式：(浏览器会标识 user agent)
据说这个样式的优先级比较低，可以覆盖。但是我搞了半天也没弄好，原本整齐的页面变得一行一行的，中间有间隔。这个去掉_&lt;!DOCTYPE html>_即可解决。
关于切图 # 拿到网页的psd设计图，最简便的方法就是切图了。photoshop会自动帮你切图，并生成html和图片切图文件夹。这里切图是需要一定的技巧的。首先，为了方便屏幕适配，方便排版，尽量采用横向切分。这样切出来的效果，就是每个tr就是整行，方便做width的适配，和纵向的分步加载。特别时候比较长的页面。</description></item></channel></rss>